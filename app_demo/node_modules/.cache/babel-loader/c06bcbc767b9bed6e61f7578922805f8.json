{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/RightPanel/OthersQuestion/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { publicFetch } from '../../../util/fetcher';\nimport RichTextEditor from 'react-rte';\nimport { FetchContext } from '../../../store/fetch';\nimport { AuthContext } from '../../../store/auth';\nimport { useHistory } from \"react-router-dom\";\n\nconst UserQuestion = props => {\n  _s();\n\n  const [questions, setQuestions] = useState(null);\n  const [show, setShow] = useState(\"none\");\n  const [value, setValue] = useState(\"\");\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  const {\n    authState\n  } = useContext(AuthContext);\n  const [questionId, setQuestionId] = useState(\"\");\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get('/question');\n      setQuestions(data);\n    };\n\n    fetchQuestion();\n  });\n\n  const sendAnswer = async e => {\n    const textValue = {\n      \"text\": value\n    };\n    console.log(textValue.text);\n\n    try {\n      await authAxios.post(`/answer/${e.target.id}`, textValue);\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const changeDisplay = e => {\n    if (show === \"none\") {\n      setShow(\"inline\");\n      setQuestionId(e.target.id);\n    } else setShow(\"none\");\n  };\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        border: \"1px solid black\",\n        width: \"70%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: questions === null || questions === void 0 ? void 0 : questions.sort().map(({\n          id,\n          title,\n          created,\n          author\n        }) => author.id !== authState.userInfo.id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: created.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: props.visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"15px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: id,\n                onClick: changeDisplay,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), id === questionId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: show\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  style: {\n                    width: \"400px\",\n                    height: \"100px\"\n                  },\n                  value: value,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: id,\n                  onClick: sendAnswer,\n                  children: \"Send Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 46\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/question/${id}`,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserQuestion, \"2c0aU31m27HjXJ++8qOCOBmeMFY=\");\n\n_c = UserQuestion;\nexport default UserQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserQuestion\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/RightPanel/OthersQuestion/index.js"],"names":["React","useState","useEffect","useContext","publicFetch","RichTextEditor","FetchContext","AuthContext","useHistory","UserQuestion","props","questions","setQuestions","show","setShow","value","setValue","authAxios","authState","questionId","setQuestionId","fetchQuestion","data","get","sendAnswer","e","textValue","console","log","text","post","target","id","window","location","reload","error","changeDisplay","onChange","border","width","sort","map","title","created","author","userInfo","slice","visible","padding","display","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,MAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAgBd,UAAU,CAACG,YAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAgBf,UAAU,CAACI,WAAD,CAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,YAAY;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMlB,WAAW,CAACmB,GAAZ,CAAgB,WAAhB,CAAvB;AACAX,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACD,KAHD;;AAIAD,IAAAA,aAAa;AACd,GANQ,CAAT;;AAQA,QAAMG,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9B,UAAMC,SAAS,GAAG;AAChB,cAAQX;AADQ,KAAlB;AAGAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAtB;;AACA,QAAI;AACF,YAAMZ,SAAS,CAACa,IAAV,CAAgB,WAAUL,CAAC,CAACM,MAAF,CAASC,EAAG,EAAtC,EAAyCN,SAAzC,CAAN;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACF,GAXD;;AAaA,QAAMC,aAAa,GAAIZ,CAAD,IAAO;AAC3B,QAAIZ,IAAI,KAAK,MAAb,EAAqB;AACnBC,MAAAA,OAAO,CAAC,QAAD,CAAP;AACAM,MAAAA,aAAa,CAACK,CAAC,CAACM,MAAF,CAASC,EAAV,CAAb;AACD,KAHD,MAIKlB,OAAO,CAAC,MAAD,CAAP;AACN,GAND;;AAQA,QAAMwB,QAAQ,GAAIb,CAAD,IAAO;AACtBT,IAAAA,QAAQ,CAACS,CAAC,CAACM,MAAF,CAAShB,KAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,KAAK,EAAE;AAAEwB,QAAAA,MAAM,EAAE,iBAAV;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAAd;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA,kCACE;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACG5B,SADH,aACGA,SADH,uBACGA,SAAS,CACN8B,IADH,GAEEC,GAFF,CAGG,CAAC;AACCV,UAAAA,EADD;AAECW,UAAAA,KAFD;AAGCC,UAAAA,OAHD;AAICC,UAAAA;AAJD,SAAD,KAMEA,MAAM,CAACb,EAAP,KAAcd,SAAS,CAAC4B,QAAV,CAAmBd,EAAjC,gBACE;AAAa,UAAA,KAAK,EAAE;AAAEO,YAAAA,MAAM,EAAE;AAAV,WAApB;AAAA,kCACE;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA,sBAA2CK,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,EAAjB;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAE;AAAER,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA,sBACG7B,KAAK,CAACsC,OAAN,gBAAgB;AAAK,cAAA,KAAK,EAAE;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAZ;AAAA,sCACf;AAAK,gBAAA,EAAE,EAAEjB,EAAT;AAAa,gBAAA,OAAO,EAAEK,aAAtB;AAAA,0BAAsCM;AAAtC;AAAA;AAAA;AAAA;AAAA,sBADe,EAEdX,EAAE,KAAKb,UAAP,gBAAoB;AAAK,gBAAA,KAAK,EAAE;AAAE+B,kBAAAA,OAAO,EAAErC;AAAX,iBAAZ;AAAA,wCACnB;AAAA;AAAA;AAAA;AAAA,wBADmB,eAEnB;AAAO,kBAAA,KAAK,EAAE;AAAE2B,oBAAAA,KAAK,EAAE,OAAT;AAAkBW,oBAAAA,MAAM,EAAE;AAA1B,mBAAd;AAAmD,kBAAA,KAAK,EAAEpC,KAA1D;AACE,kBAAA,QAAQ,EAAEuB;AADZ;AAAA;AAAA;AAAA;AAAA,wBAFmB,eAInB;AAAA;AAAA;AAAA;AAAA,wBAJmB,eAKnB;AAAQ,kBAAA,EAAE,EAAEN,EAAZ;AAAgB,kBAAA,OAAO,EAAER,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALmB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApB,GAMQ,IARM;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,gBAUC;AAAG,cAAA,IAAI,EAAG,aAAYQ,EAAG,EAAzB;AAAA,wBAA6BW;AAA7B;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASX,EAAT;AAAA;AAAA;AAAA;AAAA,gBADF,GAgBU,IAzBf;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CApFD;;GAAMvB,Y;;KAAAA,Y;AAsFN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n\nimport { publicFetch } from '../../../util/fetcher'\nimport RichTextEditor from 'react-rte';\nimport { FetchContext } from '../../../store/fetch'\nimport { AuthContext } from '../../../store/auth'\nimport { useHistory } from \"react-router-dom\";\n\nconst UserQuestion = (props) => {\n  const [questions, setQuestions] = useState(null)\n  const [show, setShow] = useState(\"none\");\n  const [value, setValue] = useState(\"\")\n  const { authAxios } = useContext(FetchContext)\n  const { authState } = useContext(AuthContext)\n  const [questionId, setQuestionId] = useState(\"\")\n\n\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const { data } = await publicFetch.get('/question')\n      setQuestions(data)\n    }\n    fetchQuestion()\n  })\n\n  const sendAnswer = async (e) => {\n    const textValue = {\n      \"text\": value\n    }\n    console.log(textValue.text)\n    try {\n      await authAxios.post(`/answer/${e.target.id}`, textValue)\n      window.location.reload();\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const changeDisplay = (e) => {\n    if (show === \"none\") {\n      setShow(\"inline\")\n      setQuestionId(e.target.id)\n    }\n    else setShow(\"none\")\n  }\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  return (\n    <div>\n      <table style={{ border: \"1px solid black\", width: \"70%\" }}>\n        <thead>\n          <tr style={{ border: \"1px solid black\" }}>\n            <th style={{ border: \"1px solid black\" }}>Date</th>\n            <th style={{ border: \"1px solid black\" }}>Question</th>\n          </tr>\n        </thead>\n        <tbody>\n          {questions\n            ?.sort()\n            .map(\n              ({\n                id,\n                title,\n                created,\n                author\n              }) => (\n                author.id !== authState.userInfo.id ?\n                  <tr key={id} style={{ border: \"1px solid black\" }}>\n                    <td style={{ border: \"1px solid black\" }}>{created.slice(0, 10)}</td>\n                    <td style={{ border: \"1px solid black\" }}>\n                      {props.visible ? <div style={{ padding: \"15px\" }}>\n                        <div id={id} onClick={changeDisplay}>{title}</div>\n                        {id === questionId ? <div style={{ display: show }}>\n                          <br />\n                          <input style={{ width: \"400px\", height: \"100px\" }} value={value}\n                            onChange={onChange} />\n                          <br />\n                          <button id={id} onClick={sendAnswer}>Send Answer</button>\n                        </div> : null}\n                      </div> :\n                        <a href={`/question/${id}`}>{title}</a>}\n                    </td>\n                  </tr> : null\n              )\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UserQuestion\n\n"]},"metadata":{},"sourceType":"module"}