{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/store/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nconst AuthContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = AuthContext;\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [authState, setAuthState] = useState({});\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userInfo = localStorage.getItem('userInfo');\n    const expiresAt = localStorage.getItem('expiresAt');\n    setAuthState({\n      token,\n      expiresAt,\n      userInfo: userInfo ? JSON.parse(userInfo) : {}\n    });\n  }, []);\n\n  const setAuthInfo = ({\n    token,\n    userInfo,\n    expiresAt\n  }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n    localStorage.setItem('expiresAt', expiresAt);\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt\n    });\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('expiresAt');\n    setAuthState({});\n  };\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt) {\n      return false;\n    }\n\n    return new Date().getTime() / 1000 < authState.expiresAt;\n  };\n\n  const isAdmin = () => {\n    var _authState$userInfo;\n\n    return ((_authState$userInfo = authState.userInfo) === null || _authState$userInfo === void 0 ? void 0 : _authState$userInfo.role) === 'admin';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      authState,\n      setAuthState: authInfo => setAuthInfo(authInfo),\n      logout,\n      isAuthenticated,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"8NY8Ru65LkWpH2YOFd2Oak7Rs7M=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/store/auth.js"],"names":["React","createContext","useState","useEffect","AuthContext","Provider","AuthProvider","children","authState","setAuthState","token","localStorage","getItem","userInfo","expiresAt","JSON","parse","setAuthInfo","setItem","stringify","logout","removeItem","isAuthenticated","Date","getTime","isAdmin","role","authInfo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,WAArB;;AAEA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAME,SAAS,GAAGH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEAH,IAAAA,YAAY,CAAC;AACXC,MAAAA,KADW;AAEXI,MAAAA,SAFW;AAGXD,MAAAA,QAAQ,EAAEA,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAH,GAA0B;AAHjC,KAAD,CAAZ;AAKD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMI,WAAW,GAAG,CAAC;AAAEP,IAAAA,KAAF;AAASG,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAD,KAAoC;AACtDH,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACAC,IAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACI,SAAL,CAAeN,QAAf,CAAjC;AACAF,IAAAA,YAAY,CAACO,OAAb,CAAqB,WAArB,EAAkCJ,SAAlC;AAEAL,IAAAA,YAAY,CAAC;AACXC,MAAAA,KADW;AAEXG,MAAAA,QAFW;AAGXC,MAAAA;AAHW,KAAD,CAAZ;AAKD,GAVD;;AAYA,QAAMM,MAAM,GAAG,MAAM;AACnBT,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAZ,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GALD;;AAOA,QAAMa,eAAe,GAAG,MAAM;AAC5B,QAAI,CAACd,SAAS,CAACE,KAAX,IAAoB,CAACF,SAAS,CAACM,SAAnC,EAA8C;AAC5C,aAAO,KAAP;AACD;;AACD,WAAO,IAAIS,IAAJ,GAAWC,OAAX,KAAuB,IAAvB,GAA8BhB,SAAS,CAACM,SAA/C;AACD,GALD;;AAOA,QAAMW,OAAO,GAAG,MAAM;AAAA;;AACpB,WAAO,wBAAAjB,SAAS,CAACK,QAAV,4EAAoBa,IAApB,MAA6B,OAApC;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AACE,IAAA,KAAK,EAAE;AACLlB,MAAAA,SADK;AAELC,MAAAA,YAAY,EAAGkB,QAAD,IAAcV,WAAW,CAACU,QAAD,CAFlC;AAGLP,MAAAA,MAHK;AAILE,MAAAA,eAJK;AAKLG,MAAAA;AALK,KADT;AAAA,cASGlB;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1DD;;GAAMD,Y;;KAAAA,Y;AA4DN,SAASF,WAAT,EAAsBE,YAAtB","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nconst AuthContext = createContext()\nconst { Provider } = AuthContext\n\nconst AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({})\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const userInfo = localStorage.getItem('userInfo')\n    const expiresAt = localStorage.getItem('expiresAt')\n\n    setAuthState({\n      token,\n      expiresAt,\n      userInfo: userInfo ? JSON.parse(userInfo) : {}\n    })\n  }, [])\n\n  const setAuthInfo = ({ token, userInfo, expiresAt }) => {\n    localStorage.setItem('token', token)\n    localStorage.setItem('userInfo', JSON.stringify(userInfo))\n    localStorage.setItem('expiresAt', expiresAt)\n\n    setAuthState({\n      token,\n      userInfo,\n      expiresAt\n    })\n  }\n\n  const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('expiresAt')\n    setAuthState({})\n  }\n\n  const isAuthenticated = () => {\n    if (!authState.token || !authState.expiresAt) {\n      return false\n    }\n    return new Date().getTime() / 1000 < authState.expiresAt\n  }\n\n  const isAdmin = () => {\n    return authState.userInfo?.role === 'admin'\n  }\n\n  return (\n    <Provider\n      value={{\n        authState,\n        setAuthState: (authInfo) => setAuthInfo(authInfo),\n        logout,\n        isAuthenticated,\n        isAdmin\n      }}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nexport { AuthContext, AuthProvider }\n"]},"metadata":{},"sourceType":"module"}