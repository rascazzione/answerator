{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/QuestionView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher';\n\nconst QuestionDetail = ({\n  questionId,\n  title\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/${id}`);\n      setQuestion(data);\n    };\n\n    fetchQuestion();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"10px\"\n        },\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), question.answers.length > 0 && question.answers.sort().map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid black\",\n            margin: \"10px\",\n            padding: \"10px\",\n            width: \"40%\",\n            height: \"30%\"\n          },\n          children: answer.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"50px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n            style: {\n              marginLeft: \"10px\",\n              margin: \"0px\",\n              padding: \"0px\",\n              display: \"inline\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"200px\",\n              display: \"inline\"\n            },\n            children: [\"Answer by \", answer.author.username, \" on \", answer.created.slice(0, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionDetail, \"K2C3avHt14lIf4ViqAMCE8AUcHY=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionDetail;\nexport default QuestionDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/QuestionView/index.js"],"names":["React","useEffect","useState","ThumbUpAltIcon","useParams","publicFetch","QuestionDetail","questionId","title","id","question","setQuestion","fetchQuestion","data","get","margin","answers","length","sort","map","answer","border","padding","width","height","text","marginBottom","marginLeft","display","author","username","created","slice"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,aAAa,GAAG,YAAY;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,WAAW,CAACS,GAAZ,CAAiB,aAAYL,EAAG,EAAhC,CAAvB;AACAE,MAAAA,WAAW,CAACE,IAAD,CAAX;AACH,KAHD;;AAKAD,IAAAA,aAAa;AAChB,GAPQ,CAAT;AAYA,sBACI;AAAA,cACKF,QAAQ,iBACL;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAAX;AAAA,kBAAgCL,QAAQ,CAACF;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,QAAQ,CAACM,OAAT,CAAiBC,MAAjB,GAA0B,CAA1B,IACGP,QAAQ,CAACM,OAAT,CAAiBE,IAAjB,GAAwBC,GAAxB,CAA6BC,MAAD,iBACxB;AAAA,gCACI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,iBAAV;AAA6BN,YAAAA,MAAM,EAAE,MAArC;AAA6CO,YAAAA,OAAO,EAAE,MAAtD;AAA8DC,YAAAA,KAAK,EAAE,KAArE;AAA4EC,YAAAA,MAAM,EAAE;AAApF,WAAZ;AAAA,oBAA0GJ,MAAM,CAACK;AAAjH;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAZ;AAAA,kCACI,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAE;AACnBC,cAAAA,UAAU,EAAE,MADO;AAEnBZ,cAAAA,MAAM,EAAE,KAFW;AAGnBO,cAAAA,OAAO,EAAE,KAHU;AAInBM,cAAAA,OAAO,EAAE;AAJU;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAK,YAAA,KAAK,EAAE;AACRD,cAAAA,UAAU,EAAE,OADJ;AAERC,cAAAA,OAAO,EAAE;AAFD,aAAZ;AAAA,qCAGcR,MAAM,CAACS,MAAP,CAAcC,QAH5B,UAG0CV,MAAM,CAACW,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwB,EAAxB,CAH1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAHR;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA7CD;;GAAM1B,c;UACaF,S;;;KADbE,c;AA+CN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher'\n\n\nconst QuestionDetail = ({ questionId, title }) => {\n    const { id } = useParams()\n    const [question, setQuestion] = useState(null)\n\n\n    useEffect(() => {\n        const fetchQuestion = async () => {\n            const { data } = await publicFetch.get(`/question/${id}`)\n            setQuestion(data)\n        }\n\n        fetchQuestion()\n    })\n\n    \n\n\n    return (\n        <div>\n            {question && (\n                <>\n                    <h2 style={{ margin: \"10px\" }}>{question.title}</h2>\n                    {question.answers.length > 0 && (\n                        question.answers.sort().map((answer) => (\n                            <div>\n                                <div style={{ border: \"1px solid black\", margin: \"10px\", padding: \"10px\", width: \"40%\", height: \"30%\" }}>{answer.text}</div>\n                                <div style={{ marginBottom: \"50px\" }}>\n                                    <ThumbUpAltIcon style={{\n                                        marginLeft: \"10px\",\n                                        margin: \"0px\",\n                                        padding: \"0px\",\n                                        display: \"inline\"\n                                    }} />\n                                    <div style={{\n                                        marginLeft: \"200px\",\n                                        display: \"inline\"\n                                    }}>Answer by {answer.author.username} on {answer.created.slice(0, 10)}</div>\n                                </div>\n                            </div>\n                        ))\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default QuestionDetail\n"]},"metadata":{},"sourceType":"module"}