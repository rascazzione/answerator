{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/Archive/src/components/QuestionView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher';\nimport { FetchContext } from '../../store/fetch';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst QuestionDetail = ({\n  questionId,\n  title\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/${id}`);\n      setQuestion(data);\n    };\n\n    if (question === null) fetchQuestion();\n  });\n\n  const upVote = async aid => {\n    const {\n      data\n    } = await authAxios.get(`/votes/upvote/${id}/${aid}`);\n    window.location.reload();\n  };\n\n  const g = id => {\n    console.log(id);\n  };\n\n  function similarity(s1, s2) {\n    var longer = s1;\n    var shorter = s2;\n\n    if (s1.length < s2.length) {\n      longer = s2;\n      shorter = s1;\n    }\n\n    var longerLength = longer.length;\n\n    if (longerLength === 0) {\n      return 1.0;\n    }\n\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n  }\n\n  function editDistance(s1, s2) {\n    s1 = s1.toLowerCase();\n    s2 = s2.toLowerCase();\n    var costs = [];\n\n    for (var i = 0; i <= s1.length; i++) {\n      var lastValue = i;\n\n      for (var j = 0; j <= s2.length; j++) {\n        if (i === 0) costs[j] = j;else {\n          if (j > 0) {\n            var newValue = costs[j - 1];\n            if (s1.charAt(i - 1) !== s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n            costs[j - 1] = lastValue;\n            lastValue = newValue;\n          }\n        }\n      }\n\n      if (i > 0) costs[s2.length] = lastValue;\n    }\n\n    return costs[s2.length];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [question && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"10px\"\n        },\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), question.answers.length > 0 && question.answers.sort().map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"10px\",\n            padding: \"10px\",\n            width: \"40%\",\n            height: \"30%\"\n          },\n          children: answer.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"50px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            id: answer.id,\n            onClick: () => upVote(answer.id),\n            style: {\n              marginLeft: \"20px\",\n              margin: \"0px\",\n              padding: \"0px\",\n              display: \"inline\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }, this), answer.score, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"200px\",\n              display: \"inline\"\n            },\n            children: [\"Answer by \", answer.author.username, \" on \", answer.created.slice(0, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Similar Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionDetail, \"holbxxp8GKsn/9apyZWCYuTIzCc=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionDetail;\nexport default QuestionDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/Archive/src/components/QuestionView/index.js"],"names":["React","useEffect","useState","useContext","ThumbUpAltIcon","useParams","publicFetch","FetchContext","IconButton","QuestionDetail","questionId","title","id","question","setQuestion","authAxios","fetchQuestion","data","get","upVote","aid","window","location","reload","g","console","log","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","toLowerCase","costs","i","lastValue","j","newValue","charAt","Math","min","margin","answers","sort","map","answer","padding","width","height","text","marginBottom","marginLeft","display","score","author","username","created","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher'\nimport { FetchContext } from '../../store/fetch'\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst QuestionDetail = ({ questionId, title }) => {\n    const { id } = useParams()\n    const [question, setQuestion] = useState(null)\n    const { authAxios } = useContext(FetchContext)\n\n    useEffect(() => {\n        const fetchQuestion = async () => {\n            const { data } = await publicFetch.get(`/question/${id}`)\n            setQuestion(data)\n        }\n        if (question === null)\n            fetchQuestion()\n    })\n\n    const upVote = async (aid) => {\n        const { data } = await authAxios.get(\n            `/votes/upvote/${id}/${aid}`\n        )\n        window.location.reload()\n    }\n\n    const g = (id) => {\n        console.log(id)\n    }\n\n    function similarity(s1, s2) {\n        var longer = s1;\n        var shorter = s2;\n        if (s1.length < s2.length) {\n            longer = s2;\n            shorter = s1;\n        }\n        var longerLength = longer.length;\n        if (longerLength === 0) {\n            return 1.0;\n        }\n        return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n    }\n\n    function editDistance(s1, s2) {\n        s1 = s1.toLowerCase();\n        s2 = s2.toLowerCase();\n\n        var costs = [];\n        for (var i = 0; i <= s1.length; i++) {\n            var lastValue = i;\n            for (var j = 0; j <= s2.length; j++) {\n                if (i === 0)\n                    costs[j] = j;\n                else {\n                    if (j > 0) {\n                        var newValue = costs[j - 1];\n                        if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n                            newValue = Math.min(Math.min(newValue, lastValue),\n                                costs[j]) + 1;\n                        costs[j - 1] = lastValue;\n                        lastValue = newValue;\n                    }\n                }\n            }\n            if (i > 0)\n                costs[s2.length] = lastValue;\n        }\n        return costs[s2.length];\n    }\n\n    return (\n        <div>\n            {question && (\n                <>\n                    <h2 style={{ margin: \"10px\" }}>{question.title}</h2>\n                    {question.answers.length > 0 && (\n                        question.answers.sort().map((answer) => (\n                            <div>\n                                <div style={{ margin: \"10px\", padding: \"10px\", width: \"40%\", height: \"30%\" }}>{answer.text}</div>\n                                <div style={{ marginBottom: \"50px\" }}>\n                                    <IconButton\n                                        id={answer.id}\n                                        onClick={() => upVote(answer.id)}\n                                        style={{\n                                            marginLeft: \"20px\",\n                                            margin: \"0px\",\n                                            padding: \"0px\",\n                                            display: \"inline\"\n                                        }} >\n                                        <ThumbUpAltIcon />\n                                    </IconButton>\n                                    {answer.score}\n                                    <div style={{\n                                        marginLeft: \"200px\",\n                                        display: \"inline\"\n                                    }}>Answer by {answer.author.username} on {answer.created.slice(0, 10)}</div>\n                                </div>\n                                <hr />\n                            </div>\n                        ))\n                    )}\n                </>\n            )}\n            <div>\n                <h3>Similar Question</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionDetail\n"]},"metadata":{},"sourceType":"module"}