{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/QuestionView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher';\n\nconst QuestionDetail = ({\n  questionId,\n  title\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/${id}`);\n      setQuestion(data);\n    };\n\n    fetchQuestion();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), question.answers.length > 0 && question.answers.sort().map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          margin: \"10px\",\n          padding: \"5px\",\n          width: \"40%\",\n          height: \"40px\"\n        },\n        children: answer.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionDetail, \"K2C3avHt14lIf4ViqAMCE8AUcHY=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionDetail;\nexport default QuestionDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/QuestionView/index.js"],"names":["React","useEffect","useState","useParams","publicFetch","QuestionDetail","questionId","title","id","question","setQuestion","fetchQuestion","data","get","answers","length","sort","map","answer","border","margin","padding","width","height","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,aAAa,GAAG,YAAY;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,WAAW,CAACS,GAAZ,CAAiB,aAAYL,EAAG,EAAhC,CAAvB;AACAE,MAAAA,WAAW,CAACE,IAAD,CAAX;AACH,KAHD;;AAKAD,IAAAA,aAAa;AAChB,GAPQ,CAAT;AASA,sBACI;AAAA,cACKF,QAAQ,iBACL;AAAA,8BACI;AAAA,kBAAKA,QAAQ,CAACF;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,QAAQ,CAACK,OAAT,CAAiBC,MAAjB,GAA0B,CAA1B,IACGN,QAAQ,CAACK,OAAT,CAAiBE,IAAjB,GAAwBC,GAAxB,CAA6BC,MAAD,iBACxB;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,iBAAV;AAA4BC,UAAAA,MAAM,EAAE,MAApC;AAA4CC,UAAAA,OAAO,EAAE,KAArD;AAA4DC,UAAAA,KAAK,EAAE,KAAnE;AAA0EC,UAAAA,MAAM,EAAE;AAAlF,SAAZ;AAAA,kBAAwGL,MAAM,CAACM;AAA/G;AAAA;AAAA;AAAA;AAAA,cADJ,CAHR;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA3BD;;GAAMnB,c;UACaF,S;;;KADbE,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher'\n\nconst QuestionDetail = ({ questionId, title }) => {\n    const { id } = useParams()\n    const [question, setQuestion] = useState(null)\n\n    useEffect(() => {\n        const fetchQuestion = async () => {\n            const { data } = await publicFetch.get(`/question/${id}`)\n            setQuestion(data)\n        }\n\n        fetchQuestion()\n    })\n\n    return (\n        <div>\n            {question && (\n                <>\n                    <h2>{question.title}</h2>\n                    {question.answers.length > 0 && (\n                        question.answers.sort().map((answer) => (\n                            <div style={{ border: \"1px solid black\",margin: \"10px\", padding: \"5px\", width: \"40%\", height: \"40px\"}}>{answer.text}</div>\n                        ))\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default QuestionDetail\n"]},"metadata":{},"sourceType":"module"}