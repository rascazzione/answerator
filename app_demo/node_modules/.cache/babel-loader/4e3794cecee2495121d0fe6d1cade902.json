{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/RightPanel/UserQuestion/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { publicFetch } from '../../../util/fetcher';\n\nconst UserQuestion = ({\n  username\n}) => {\n  _s();\n\n  const [posts, setPosts] = useState(null);\n  const [postType, setPostType] = useState('Questions');\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/user/${username}`);\n      setPosts(data);\n    };\n\n    fetchQuestions();\n  }, [postType, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        border: \"1px solid black\",\n        width: \"70%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid black\",\n              width: \"40%\"\n            },\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts === null || posts === void 0 ? void 0 : posts.map(({\n          id,\n          title,\n          created,\n          answers\n        }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: created.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid black\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/question/${id}`,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), answers.length ? null : /*#__PURE__*/_jsxDEV(CancelIcon, {\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 58\n            }, this), (() => {\n              for (let i = 0; answers.length; i++) {\n                if (answers[i].score) return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  style: {\n                    color: \"green\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 56\n                }, this);else return /*#__PURE__*/_jsxDEV(CancelIcon, {\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 57\n                }, this);\n              }\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserQuestion, \"bF9lVSNmkrGLYtH59bdrJM3EesQ=\");\n\n_c = UserQuestion;\nexport default UserQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserQuestion\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/RightPanel/UserQuestion/index.js"],"names":["React","useEffect","useState","CheckCircleIcon","CancelIcon","publicFetch","UserQuestion","username","posts","setPosts","postType","setPostType","fetchQuestions","data","get","border","width","map","id","title","created","answers","slice","length","color","i","score"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,SAASC,WAAT,QAA4B,uBAA5B;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,WAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,cAAc,GAAG,YAAY;AAC/B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,WAAW,CAACS,GAAZ,CAAiB,kBAAiBP,QAAS,EAA3C,CAAvB;AACAE,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,KAHD;;AAIAD,IAAAA,cAAc;AACjB,GANQ,EAMN,CAACF,QAAD,EAAWH,QAAX,CANM,CAAT;AAQA,sBACI;AAAA,2BACI;AAAO,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE,iBAAV;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAAd;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE,iBAAV;AAA6BC,cAAAA,KAAK,EAAE;AAApC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBACKR,KADL,aACKA,KADL,uBACKA,KAAK,CAAES,GAAP,CAAW,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA,OAAb;AAAsBC,UAAAA;AAAtB,SAAD,kBACR;AAAa,UAAA,KAAK,EAAE;AAAEN,YAAAA,MAAM,EAAE;AAAV,WAApB;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA,sBAA2CK,OAAO,CAACE,KAAR,CAAc,CAAd,EAAiB,EAAjB;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAE;AAAEP,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA,oCACI;AAAG,cAAA,IAAI,EAAG,aAAYG,EAAG,EAAzB;AAAA,wBAA6BC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKE,OAAO,CAACE,MAAR,GAAiB,IAAjB,gBAAwB,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAF7B,EAIQ,CAAC,MAAM;AACH,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBJ,OAAO,CAACE,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACjC,oBAAIJ,OAAO,CAACI,CAAD,CAAP,CAAWC,KAAf,EACI,oBAAO,QAAC,eAAD;AAAiB,kBAAA,KAAK,EAAE;AAAEF,oBAAAA,KAAK,EAAE;AAAT;AAAxB;AAAA;AAAA;AAAA;AAAA,wBAAP,CADJ,KAEK,oBAAO,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAE;AAAEA,oBAAAA,KAAK,EAAE;AAAT;AAAnB;AAAA;AAAA;AAAA;AAAA,wBAAP;AACR;AACJ,aAND,GAJR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAASN,EAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA5CD;;GAAMZ,Y;;KAAAA,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nimport { publicFetch } from '../../../util/fetcher'\n\n\nconst UserQuestion = ({ username }) => {\n    const [posts, setPosts] = useState(null)\n    const [postType, setPostType] = useState('Questions')\n\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            const { data } = await publicFetch.get(`/question/user/${username}`)\n            setPosts(data)\n        }\n        fetchQuestions()\n    }, [postType, username])\n\n    return (\n        <div>\n            <table style={{ border: \"1px solid black\", width: \"70%\" }}>\n                <thead>\n                    <tr style={{ border: \"1px solid black\" }}>\n                        <th style={{ border: \"1px solid black\" }}>Date</th>\n                        <th style={{ border: \"1px solid black\", width: \"40%\"  }}>Question</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {posts?.map(({ id, title, created, answers }) => (\n                        <tr key={id} style={{ border: \"1px solid black\" }}>\n                            <td style={{ border: \"1px solid black\" }}>{created.slice(0, 10)}</td>\n                            <td style={{ border: \"1px solid black\" }}>\n                                <a href={`/question/${id}`}>{title}</a>\n                                {answers.length ? null : <CancelIcon style={{ color: \"red\" }} />}\n                                {\n                                    (() => {\n                                        for (let i = 0; answers.length; i++) {\n                                            if (answers[i].score)\n                                                return <CheckCircleIcon style={{ color: \"green\" }} />\n                                            else return <CancelIcon style={{ color: \"red\" }} />\n                                        }\n                                    })()\n                                }\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UserQuestion\n"]},"metadata":{},"sourceType":"module"}