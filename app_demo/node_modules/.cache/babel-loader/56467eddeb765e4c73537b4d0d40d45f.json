{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/Forms/SignUp/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../../util/fetcher';\nimport { AuthContext } from '../../../store/auth';\nimport FormInput from '../../form-input';\nimport styles from './signup-form.module.css';\n\nconst SignupForm = () => {\n  _s();\n\n  const {\n    setAuthState\n  } = useContext(AuthContext);\n  const [loading, setLoading] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      passwordConfirmation: ''\n    },\n    onSubmit: async (values, {\n      setStatus,\n      resetForm\n    }) => {\n      setLoading(true);\n\n      try {\n        const {\n          data\n        } = await publicFetch.post('signup', values);\n        const {\n          token,\n          expiresAt,\n          userInfo\n        } = data;\n        setAuthState({\n          token,\n          expiresAt,\n          userInfo\n        });\n        resetForm({});\n      } catch (error) {\n        setStatus(error.response.data.message);\n      }\n\n      setLoading(false);\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required').max(16, 'Must be at most 16 characters long').matches(/^[a-zA-Z0-9_-]+$/, 'Contains invalid characters'),\n      password: Yup.string().required('Required').min(6, 'Must be at least 6 characters long').max(50, 'Must be at most 50 characters long'),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n    }),\n    children: ({\n      values,\n      errors,\n      touched,\n      status,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Username\",\n        type: \"text\",\n        name: \"username\",\n        autoComplete: \"off\",\n        value: values.username,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        hasError: touched.username && errors.username,\n        errorMessage: errors.username && errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        autoComplete: \"off\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        hasError: touched.password && errors.password,\n        errorMessage: errors.password && errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password Confirm\",\n        type: \"password\",\n        name: \"passwordConfirmation\",\n        autoComplete: \"off\",\n        value: values.passwordConfirmation,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        hasError: touched.passwordConfirmation && errors.passwordConfirmation,\n        errorMessage: errors.passwordConfirmation && errors.passwordConfirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.status,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        primary: true,\n        full: true,\n        className: styles.submitButton,\n        disabled: isSubmitting,\n        isLoading: loading,\n        type: \"submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"rh7n5p1JB3KwH75gpLyKWfLQSx0=\");\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/home/arnob/perosnal/projects/stackoverflow-clone/client2/src/components/Forms/SignUp/index.js"],"names":["React","useState","useContext","Formik","Yup","publicFetch","AuthContext","FormInput","styles","SignupForm","setAuthState","loading","setLoading","username","password","passwordConfirmation","values","setStatus","resetForm","data","post","token","expiresAt","userInfo","error","response","message","object","string","required","max","matches","min","oneOf","ref","errors","touched","status","handleChange","handleBlur","handleSubmit","isSubmitting","form","submitButton"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n\nimport { publicFetch } from '../../../util/fetcher'\nimport { AuthContext } from '../../../store/auth'\n\nimport FormInput from '../../form-input'\n\nimport styles from './signup-form.module.css'\n\nconst SignupForm = () => {\n  const { setAuthState } = useContext(AuthContext)\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{ username: '', password: '', passwordConfirmation: '' }}\n      onSubmit={async (values, { setStatus, resetForm }) => {\n        setLoading(true)\n        try {\n          const { data } = await publicFetch.post('signup', values)\n          const { token, expiresAt, userInfo } = data\n          setAuthState({ token, expiresAt, userInfo })\n          resetForm({})\n        } catch (error) {\n          setStatus(error.response.data.message)\n        }\n        setLoading(false)\n      }}\n      validationSchema={Yup.object({\n        username: Yup.string()\n          .required('Required')\n          .max(16, 'Must be at most 16 characters long')\n          .matches(/^[a-zA-Z0-9_-]+$/, 'Contains invalid characters'),\n        password: Yup.string()\n          .required('Required')\n          .min(6, 'Must be at least 6 characters long')\n          .max(50, 'Must be at most 50 characters long'),\n        passwordConfirmation: Yup.string().oneOf(\n          [Yup.ref('password'), null],\n          'Passwords must match'\n        )\n      })}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        status,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <FormInput\n            label=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            autoComplete=\"off\"\n            value={values.username}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={touched.username && errors.username}\n            errorMessage={errors.username && errors.username}\n          />\n          <FormInput\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            autoComplete=\"off\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={touched.password && errors.password}\n            errorMessage={errors.password && errors.password}\n          />\n          <FormInput\n            label=\"Password Confirm\"\n            type=\"password\"\n            name=\"passwordConfirmation\"\n            autoComplete=\"off\"\n            value={values.passwordConfirmation}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            hasError={\n              touched.passwordConfirmation && errors.passwordConfirmation\n            }\n            errorMessage={\n              errors.passwordConfirmation && errors.passwordConfirmation\n            }\n          />\n          <p className={styles.status}>{status}</p>\n          <button\n            primary\n            full\n            className={styles.submitButton}\n            disabled={isSubmitting}\n            isLoading={loading}\n            type=\"submit\"\n          >\n            Sign up\n          </button>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}