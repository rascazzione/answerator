{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/masudimran/Downloads/Archive2/src/components/QuestionView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher';\nimport { FetchContext } from '../../store/fetch';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst QuestionDetail = ({\n  questionId,\n  title\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  const [questions, setQuestions] = useState(null);\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/${id}`);\n      setQuestion(data);\n    };\n\n    if (question === null) fetchQuestion();\n\n    const fetchQuestions = async () => {\n      const {\n        data\n      } = await publicFetch.get('/question');\n      setQuestions(data);\n    };\n\n    if (questions === null) {\n      fetchQuestions();\n    }\n  });\n\n  const upVote = async aid => {\n    await authAxios.get(`/votes/upvote/${id}/${aid}`);\n    window.location.reload();\n  };\n\n  function similarity(s1, s2) {\n    var longer = s1;\n    var shorter = s2;\n\n    if (s1.length < s2.length) {\n      longer = s2;\n      shorter = s1;\n    }\n\n    var longerLength = longer.length;\n\n    if (longerLength === 0) {\n      return 1.0;\n    }\n\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n  }\n\n  function editDistance(s1, s2) {\n    s1 = s1.toLowerCase();\n    s2 = s2.toLowerCase();\n    var costs = [];\n\n    for (var i = 0; i <= s1.length; i++) {\n      var lastValue = i;\n\n      for (var j = 0; j <= s2.length; j++) {\n        if (i === 0) costs[j] = j;else {\n          if (j > 0) {\n            var newValue = costs[j - 1];\n            if (s1.charAt(i - 1) !== s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n            costs[j - 1] = lastValue;\n            lastValue = newValue;\n          }\n        }\n      }\n\n      if (i > 0) costs[s2.length] = lastValue;\n    }\n\n    return costs[s2.length];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [question && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: question.answers.length > 0 && question.answers.sort().map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '40px',\n            border: '1px solid black',\n            width: \"70%\",\n            height: \"40%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: \"10px\",\n              width: \"40%\",\n              height: \"40%\"\n            },\n            children: question.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"10px\",\n              padding: \"10px\",\n              width: \"40%\",\n              height: \"40%\"\n            },\n            children: answer.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            id: answer.id,\n            onClick: () => upVote(answer.id),\n            style: {\n              marginLeft: \"20px\",\n              margin: \"0px\",\n              padding: \"0px\",\n              display: \"inline\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }, this), answer.score, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"450px\",\n              display: \"inline\"\n            },\n            children: [\"Answer by \", answer.author.username, \" on \", answer.created.slice(0, 10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this))\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Similar Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), console.log(questions), (() => {\n        let high = 0;\n        let tempId = 0;\n        let tempTitle = \"\";\n\n        if (questions) {\n          for (let i = 0; i < questions.length; i++) {\n            if (question) {\n              if (question.id !== questions[i].id) {\n                let temp = similarity(questions[i].title, question.title);\n\n                if (temp > high) {\n                  high = temp;\n                  tempId = questions[i].id;\n                  tempTitle = questions[i].title;\n                }\n              }\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/question/${tempId}`,\n            children: tempTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 36\n          }, this);\n        }\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionDetail, \"T8CeDEuTTz91xFUWGLKU6QuZ2qw=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionDetail;\nexport default QuestionDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"sources":["/Users/masudimran/Downloads/Archive2/src/components/QuestionView/index.js"],"names":["React","useEffect","useState","useContext","ThumbUpAltIcon","useParams","publicFetch","FetchContext","IconButton","QuestionDetail","questionId","title","id","question","setQuestion","authAxios","questions","setQuestions","fetchQuestion","data","get","fetchQuestions","upVote","aid","window","location","reload","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","toLowerCase","costs","i","lastValue","j","newValue","charAt","Math","min","answers","sort","map","answer","marginLeft","border","width","height","margin","padding","text","marginBottom","display","score","author","username","created","slice","console","log","high","tempId","tempTitle","temp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useParams } from \"react-router-dom\";\nimport { publicFetch } from '../../util/fetcher'\nimport { FetchContext } from '../../store/fetch'\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst QuestionDetail = ({ questionId, title }) => {\n    const { id } = useParams()\n    const [question, setQuestion] = useState(null)\n    const { authAxios } = useContext(FetchContext)\n    const [questions, setQuestions] = useState(null)\n\n    useEffect(() => {\n        const fetchQuestion = async () => {\n            const { data } = await publicFetch.get(`/question/${id}`)\n            setQuestion(data)\n        }\n        if (question === null)\n            fetchQuestion()\n\n        const fetchQuestions = async () => {\n            const { data } = await publicFetch.get('/question')\n            setQuestions(data)\n        }\n        if (questions === null) {\n            fetchQuestions()\n        }\n    })\n\n    const upVote = async (aid) => {\n        await authAxios.get(\n            `/votes/upvote/${id}/${aid}`\n        )\n        window.location.reload()\n    }\n\n    function similarity(s1, s2) {\n        var longer = s1;\n        var shorter = s2;\n        if (s1.length < s2.length) {\n            longer = s2;\n            shorter = s1;\n        }\n        var longerLength = longer.length;\n        if (longerLength === 0) {\n            return 1.0;\n        }\n        return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n    }\n\n    function editDistance(s1, s2) {\n        s1 = s1.toLowerCase();\n        s2 = s2.toLowerCase();\n\n        var costs = [];\n        for (var i = 0; i <= s1.length; i++) {\n            var lastValue = i;\n            for (var j = 0; j <= s2.length; j++) {\n                if (i === 0)\n                    costs[j] = j;\n                else {\n                    if (j > 0) {\n                        var newValue = costs[j - 1];\n                        if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n                            newValue = Math.min(Math.min(newValue, lastValue),\n                                costs[j]) + 1;\n                        costs[j - 1] = lastValue;\n                        lastValue = newValue;\n                    }\n                }\n            }\n            if (i > 0)\n                costs[s2.length] = lastValue;\n        }\n        return costs[s2.length];\n    }\n\n    return (\n      \n        <div>\n             {question && (\n                <>\n                 \n                    {question.answers.length > 0 && (\n                        question.answers.sort().map((answer) => ( \n                            \n                           \n                                   \n                            <div >\n                                <div style={{marginLeft:'40px',border:'1px solid black',width: \"70%\", height: \"40%\"}}>\n                                <h2 style={{ margin: \"10px\" ,width: \"40%\", height: \"40%\"}}>{question.title}</h2>\n                                <div style={{ margin: \"10px\", padding: \"10px\", width: \"40%\", height: \"40%\" }}>{answer.text}</div>\n                                </div>\n                                <div style={{ marginBottom: \"20px\" }}>\n                               \n                                    <IconButton\n                                        id={answer.id}\n                                        onClick={() => upVote(answer.id)}\n                                        style={{\n                                            marginLeft: \"20px\",\n                                            margin: \"0px\",\n                                            padding: \"0px\",\n                                            display: \"inline\"\n                                        }} >\n                                        <ThumbUpAltIcon />\n                                    </IconButton>\n                                    {answer.score}\n                                    <div style={{\n                                        marginLeft: \"450px\",\n                                        display: \"inline\"\n                                    }}>Answer by {answer.author.username} on {answer.created.slice(0, 10)}</div>\n                                </div>\n                                <hr />\n                            </div>\n                        ))\n                    ) }\n                  \n                </>\n            )\n            }\n            <div>\n                <h3>Similar Question</h3>\n                {console.log(questions)}\n                {\n                    (() => {\n                        let high = 0;\n                        let tempId = 0;\n                        let tempTitle = \"\";\n                        if (questions) {\n                            for (let i = 0; i < questions.length; i++) {\n                                if (question) {\n                                    if (question.id !== questions[i].id) {\n                                        let temp = similarity(questions[i].title, question.title)\n                                        if (temp > high) {\n                                            high = temp\n                                            tempId = questions[i].id\n                                            tempTitle = questions[i].title\n                                        }\n                                    }\n                                }\n                            }\n                            return <a href={`/question/${tempId}`}>{tempTitle}</a>\n                        }\n                    })()\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionDetail\n"]},"metadata":{},"sourceType":"module"}